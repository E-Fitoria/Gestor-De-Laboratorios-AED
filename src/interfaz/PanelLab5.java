package interfaz;


import Laboratorio5.PanelLab5Ejercicio1;
import Laboratorio5.PanelLab5Ejercicio2;
import Laboratorio5.PanelLab5Ejercicio3;
import Laboratorio5.PanelLab5Ejercicio4;
import Laboratorio5.PanelLab5Ejercicio5;
import TransferirDatos.ModeloDeTransferencia;
import java.awt.BorderLayout;
import java.awt.Color;
import javax.swing.JOptionPane;
import javax.swing.JPanel;


/**
 *
 * @author Usuario
 */
public class PanelLab5 extends javax.swing.JPanel {

    /**
     * Creates new form PanelLab5
     */
    public PanelLab5() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        btnProbar = new javax.swing.JButton();
        PanelProbarEjercicio = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(232, 232, 232));

        jLabel1.setFont(new java.awt.Font("Consolas", 1, 16)); // NOI18N
        jLabel1.setText("Laboratorio de Listas");

        jComboBox1.setFont(new java.awt.Font("Consolas", 1, 13)); // NOI18N
        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ejercicio 1", "Ejercicio 2", "Ejercicio 3", "Ejercicio 4", "Ejercicio 5" }));
        jComboBox1.setSelectedIndex(-1);
        jComboBox1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        jComboBox1.setFocusable(false);
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        btnProbar.setBackground(new java.awt.Color(226, 226, 226));
        btnProbar.setFont(new java.awt.Font("Consolas", 1, 15)); // NOI18N
        btnProbar.setText("Probar");
        btnProbar.setBorderPainted(false);
        btnProbar.setContentAreaFilled(false);
        btnProbar.setFocusable(false);
        btnProbar.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        btnProbar.setOpaque(true);
        btnProbar.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                btnProbarMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                btnProbarMouseExited(evt);
            }
            public void mousePressed(java.awt.event.MouseEvent evt) {
                btnProbarMousePressed(evt);
            }
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                btnProbarMouseReleased(evt);
            }
        });
        btnProbar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnProbarActionPerformed(evt);
            }
        });

        PanelProbarEjercicio.setBackground(new java.awt.Color(232, 232, 232));

        javax.swing.GroupLayout PanelProbarEjercicioLayout = new javax.swing.GroupLayout(PanelProbarEjercicio);
        PanelProbarEjercicio.setLayout(PanelProbarEjercicioLayout);
        PanelProbarEjercicioLayout.setHorizontalGroup(
            PanelProbarEjercicioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        PanelProbarEjercicioLayout.setVerticalGroup(
            PanelProbarEjercicioLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 333, Short.MAX_VALUE)
        );

        jLabel2.setFont(new java.awt.Font("Consolas", 1, 14)); // NOI18N
        jLabel2.setText("Ejercicios : ");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(PanelProbarEjercicio, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 142, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 129, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jLabel1)))
                .addGap(111, 111, 111)
                .addComponent(btnProbar)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(45, 45, 45)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(btnProbar, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(jLabel1)))
                .addGap(34, 34, 34)
                .addComponent(PanelProbarEjercicio, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(1, 1, 1))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        
        ModeloDeTransferencia asignacion = new ModeloDeTransferencia(); 
        
        String ejercicio = jComboBox1.getSelectedItem().toString();
        
        if (ejercicio.equals("Ejercicio 1"))
        {
            
            asignacion.setAsignacion("""
                                     Escribir un programa que llene una lista de estudiantes de segundo año que llevan 
                                     matemática básica (pueden ser de diferentes carreras) y almacene los datos en un 
                                     arreglo de registros utilizando un ArrayList, para lo cual deberá crear la clase 
                                     Alumno la cual tendrá como variables de instancia los campos de los registros y 
                                     crear la clase Listado en la cual se declara el objeto lista de tipo de la clase 
                                     Alumno como ArrayList y tendrá los métodos Agregar (insertará al arrayList) e 
                                     Imprimir (Imprimirá los registros del arrayList).
                                     
                                     La interfaz principal deberá tener un botón que permita insertar los registros, 
                                     otro que permita imprimir los datos por carrera, otro botón que limpie los cuadros 
                                     de textos y un botón salir.
                                     """);
        }
        else if (ejercicio.equals("Ejercicio 2"))
        {
            asignacion.setAsignacion("""
                                     Escriba un programa que, dada una lista que contiene números enteros, la divida en 
                                     dos listas independientes. Una formada por los números positivos y otra formada por
                                     los números negativos.
                                     
                                     Imprimir las listas. Ejm:
                                     
                                     Lista de números: 7 -8 -9 5 6 3 -2 -1 0
                                     Lista de positivos: 7 5 6 3 0
                                     Lista de negativos: -8 -9 -2 -1""");
        }
        else if (ejercicio.equals("Ejercicio 3"))
        {
            asignacion.setAsignacion("""
                                     Una empresa necesita almacenar en un arrayList el nombre, numero de empleado y 
                                     salario de un grupo de empleados y necesita calcular la nómina total.
                                     Escribir una clase que contenga los campos del arrayList. Otra clase que tenga los 
                                     métodos insertar,imprimir, calcular nomina total.
                                     
                                     La interfaz principal deberá tener un botón que permita insertar los registros, otro
                                     que permita imprimir, otro botón que calcule e imprima la nómina total, otro botón 
                                     que limpie los cuadros de textos y un botón salir.
                                     """);
        }
        else if (ejercicio.equals("Ejercicio 4"))
        {
            asignacion.setAsignacion("""
                                     Escribir un programa utilizando ArrayList que represente una pila. Una pila es una 
                                     estructura LIFO (Ultimo en entrar, primero en salir), se inserta y se elimina por 
                                     el final de manera gráfica.
                                     """);
        }
        else if (ejercicio.equals("Ejercicio 5"))
        {
            asignacion.setAsignacion("""
                                     Escribir un programa que cree una lista de números positivos y que de esta lista 
                                     cree dos más, uno con los números menores de 10 y otra con los números mayores a 10.
                                     
                                     Ejemplo:
                                     Números : 7 5 12 8 14 23 6 9 15
                                     Mayores de 10 : 12 14 23 15
                                     Menores a 10 : 7 5 8 6 9
                                     """);
        }
        
        PanelVerAsignacion panel = new PanelVerAsignacion(asignacion); 
        CambiarPanel(panel); 
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void btnProbarMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnProbarMouseEntered
        btnProbar.setBackground(new Color(59,89,152));
    }//GEN-LAST:event_btnProbarMouseEntered

    private void btnProbarMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnProbarMouseExited
        btnProbar.setBackground(new Color(226,226,226));
    }//GEN-LAST:event_btnProbarMouseExited

    private void btnProbarMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnProbarMousePressed
        btnProbar.setBackground(new Color(1,50,170));
    }//GEN-LAST:event_btnProbarMousePressed

    private void btnProbarMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnProbarMouseReleased
        btnProbar.setBackground(new Color(226,226,226));
    }//GEN-LAST:event_btnProbarMouseReleased

    private void btnProbarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnProbarActionPerformed
        
       try
       {
            String ejercicio = jComboBox1.getSelectedItem().toString();

            switch(ejercicio)
            {
                case "Ejercicio 1":

                PanelLab5Ejercicio1 panel = new PanelLab5Ejercicio1();
                CambiarPanel(panel);

                break;
                case "Ejercicio 2":

                PanelLab5Ejercicio2 panel2 = new PanelLab5Ejercicio2();
                CambiarPanel(panel2);

                break;
                case "Ejercicio 3":

                PanelLab5Ejercicio3 panel3 = new PanelLab5Ejercicio3();
                CambiarPanel(panel3);

                break;
                case "Ejercicio 4":

                PanelLab5Ejercicio4 panel4 = new PanelLab5Ejercicio4();
                CambiarPanel(panel4);

                break;
                case "Ejercicio 5":

                PanelLab5Ejercicio5 panel5 = new PanelLab5Ejercicio5();
                CambiarPanel(panel5);

                break;
            }
       }
       catch (Exception e)
       {
           JOptionPane.showMessageDialog(null,"Seleccione un ejercicio");
       }

    }//GEN-LAST:event_btnProbarActionPerformed

    private void CambiarPanel(JPanel panel)
    {
        panel.setSize(600,430); //le damos las medidas del panel
        panel.setLocation(0,0);
        
        PanelProbarEjercicio.removeAll(); //removeoms lo que hay en el panel
        PanelProbarEjercicio.add(panel, BorderLayout.CENTER); //agragamos a panel de contencion el nuevo panel a mostrar
        PanelProbarEjercicio.revalidate();
        PanelProbarEjercicio.repaint();   //repintamos
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel PanelProbarEjercicio;
    private javax.swing.JButton btnProbar;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables
}
