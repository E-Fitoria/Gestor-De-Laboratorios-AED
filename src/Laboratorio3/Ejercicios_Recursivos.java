package Laboratorio3;


import javax.swing.JOptionPane;

public class Ejercicios_Recursivos extends javax.swing.JFrame {

    /**
     * Creates new form Ejercicios_Recursivos
     */
    public Ejercicios_Recursivos() {
        initComponents();
        setLocationRelativeTo(null);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jComboBox1 = new javax.swing.JComboBox<>();
        btnUsar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setText("<html><b><center>Ejercicios de Recursividad</center><html>");

        jComboBox1.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Ejercicio1", "Ejercicio2", "Ejercicio3", "Ejercicio4", "Ejercicio5", "Ejercicio6" }));
        jComboBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jComboBox1ActionPerformed(evt);
            }
        });

        btnUsar.setText("Usar");
        btnUsar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUsarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(150, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 459, Short.MAX_VALUE)
                    .addComponent(jComboBox1, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(18, 18, 18)
                .addComponent(btnUsar)
                .addGap(42, 42, 42))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jComboBox1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnUsar))
                .addContainerGap(269, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jComboBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jComboBox1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jComboBox1ActionPerformed

    private void btnUsarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUsarActionPerformed
       
        String ejercicio = jComboBox1.getSelectedItem().toString();
       
       if(ejercicio.equals("Ejercicio1"))
       {
           
           int tam = Integer.parseInt(JOptionPane.showInputDialog("Ingrese el tamano del arreglo")); 
            Integer[] numeros = new Integer[tam];

            String nums = "";

            for (int i = 0; i < tam; i++) {
                numeros[i] = Integer.valueOf(JOptionPane.showInputDialog("Ingrese el numero num " + i+" del arreglo"));
            }

            // Orden original:
            nums = MostrarOriginal(numeros, tam-1, nums);
            JOptionPane.showMessageDialog(null, "Orden Original: " + nums);
            nums = "";
            // Orden inverso:
            nums = MostrarInverso(numeros, 0, tam-1, nums);
            JOptionPane.showMessageDialog(null, "Orden Inverso: " + nums);
  
       }
       else if(ejercicio.equals("Ejercicio2"))
       {
            String palabra = JOptionPane.showInputDialog("Ingrese la palabra: ");;
            String invertida = invertirPalabra(palabra);
            JOptionPane.showMessageDialog(null,invertida);        
       }
       else if (ejercicio.equals("Ejercicio3"))
       {
           Integer[] numeros = new Integer[10];

            for (int i = 0; i < 10; i++){
                numeros[i]= Integer.parseInt(JOptionPane.showInputDialog("Ingrese el numero " + (i+1)));
            }

            int producto = ProductoNUm(numeros,10 - 1);

            JOptionPane.showMessageDialog(null, producto);
           
       }
       else if (ejercicio.equals("Ejercicio4"))
       {
           
           String cadena = JOptionPane.showInputDialog("Ingrese una cadena");

            JOptionPane.showMessageDialog(null,"La cantidad de espacios en la cadena es de: " + NumEspacios(cadena,0));     
       }
       else if (ejercicio.equals("Ejercicio5"))
       {
           
            double cuentaPedro = 400.0;
            double interesPedro = 4.0;

            double cuentaJuan = 500.0;
            double interesJuan = 2.3;

            int year = 2021;

            String arreglo[][] = new String[6][3];

            arreglo[0][0] = "AÃ±o";
            arreglo[0][1] = "Pedro";
            arreglo[0][2] = "Juan";

            arreglo = Calculo(cuentaPedro, interesPedro, cuentaJuan, interesJuan, year, 1.0, 1, 0, arreglo);

            String mostrar = "";

            for(int x = 0; x < arreglo.length;x++) {

                mostrar += arreglo[x][0] + "   " +arreglo[x][1] +  "   "  +arreglo[x][2] + "\n";
            }

            JOptionPane.showMessageDialog(null, mostrar);
           
       }
       else if (ejercicio.equals("Ejercicio6"))
       {
           int num = Integer.parseInt(JOptionPane.showInputDialog("Ingrese un numero"));
        
            String mensaje = "";
           JOptionPane.showMessageDialog(null, ulam(num, mensaje) + "1");
       }
       
    }//GEN-LAST:event_btnUsarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Ejercicios_Recursivos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Ejercicios_Recursivos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Ejercicios_Recursivos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Ejercicios_Recursivos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Ejercicios_Recursivos().setVisible(true);
            }
        });
    }

    /*
    Ejercicio 1
    */
    public static String MostrarOriginal(Integer[] numeros, int indice, String nums) {
    
        if (indice == 0)    {
            nums += "" + numeros[indice];
        } else {
            nums = MostrarOriginal(numeros, indice - 1, nums);
            nums += " " + numeros[indice];
        }
        
        return nums;
    }
    
     public static String MostrarInverso(Integer[] numeros, int iactual, int indice, String nums) {
         
        if (iactual == indice)    {
            nums += "" + numeros[iactual];
        } else {
            nums = MostrarInverso(numeros, iactual + 1, indice, nums);
            nums += " " + numeros[iactual];
        }
        return nums;
    }
     
    /*
     Ejercicio2
     */
    
     public static String invertirPalabra(String palabra){

        if(palabra.length() == 1){ //caso base, acaba cuando entre a la condicion
            return palabra;
        } else {
            return invertirPalabra(palabra.substring(1)) + palabra.charAt(0);
        }
    }
    /*
     ejercicio 3
     */
     public static int ProductoNUm(Integer[] numerous, int num){

        int producto = 1;

        if(num < 0){

            return producto;

        }else{

            producto *= numerous[num] * ProductoNUm(numerous,num-1);
        }

        return producto;
    }
    
     /*
     Ejercicio4
     */
     
      public static int NumEspacios(String cadena, int valor_inicial){

        int espacios = 0;

        if(valor_inicial == cadena.length())
        {
            return espacios;
        }
        else if(cadena.charAt(valor_inicial) ==  ' ') //revisamos caracter a caracter iniciando de la posicion 0
        {
            espacios++;
        }

        valor_inicial++; //aumentamos el valor para ir buscando el espacio

        return espacios + NumEspacios(cadena, valor_inicial);
    }
     /*
      Ejercicio 5
      */
      
      public static String[][] Calculo(double cuenta1, double interes1, double cuenta2, double interes2, int year,double t , int x, int y, String tabla[][]) {
       
        tabla[x][y] = ""+year;
        tabla[x][y+1] = String.format("%.2f", cuenta1);
        tabla[x][y+2] = String.format("%.2f", cuenta2);
        
        cuenta1 =  cuenta1*(1.0 + (t*interes1/100.0));
       
        cuenta2 = cuenta2*(1.0 + (t*interes2/100.0));
                
        if (cuenta1 <= cuenta2) {
         tabla = Calculo(cuenta1, interes1, cuenta2, interes2, year+1, t+1.0,x+1,y,tabla);
        } else {
            tabla[x][y] = ""+year;
            tabla[x][y+1] = String.format("%.2f", cuenta1);
            tabla[x][y+2] = String.format("%.2f", cuenta2);
        }
      
       return tabla; 
    }
      
    /*
      Ejercicio 6
      */
     public static String ulam(int numero, String secuencia){
        
        
        if (numero > 1 && numero % 2 == 0)
        {
            
            secuencia += numero +" "+ulam(numero/2,secuencia);
        }
        else if (numero > 1 && numero % 2 != 0)
        {
            secuencia += numero +" "+ulam((numero*3)+1,secuencia);
        }
        else
        {      
            return secuencia;       
        }
       
        return secuencia;
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnUsar;
    private javax.swing.JComboBox<String> jComboBox1;
    private javax.swing.JLabel jLabel1;
    // End of variables declaration//GEN-END:variables
}
